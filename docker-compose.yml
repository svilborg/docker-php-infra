version: '3'

networks:
  netwrk:
    driver: bridge

volumes:
  esdata:
    driver: local

services:

    php-fpm:
      build:
        context: ./php/fpm
      volumes:
        - ../:/var/www:cached
      expose:
        - "9000"
      extra_hosts:
        - "dockerhost:10.0.75.1"
      networks:
        - netwrk

    php-cli:
      build:
        context: ./php/cli
      volumes:
        - ../:/var/www:cached
        - ./test:/var/www/test:cached
      tty: true
      stdin_open: true
      networks:
        - netwrk

    nginx:
      build:
        context: ./nginx
        args:
          - PHP_UPSTREAM_CONTAINER=php-fpm
          - PHP_UPSTREAM_PORT=9000
      restart: always
      volumes:
        - ../:/var/www:cached
        - ./logs:/var/log/nginx
        - ./nginx/sites:/etc/nginx/sites-available
      ports:
        - "80:80"
        - "443:443"
      depends_on:
        - php-fpm
      networks:
        - netwrk

    apache2:
      build:
        context: ./apache2
        args:
          - PHP_UPSTREAM_CONTAINER=php-fpm
          - PHP_UPSTREAM_PORT=9000
          - PHP_UPSTREAM_TIMEOUT=60
          - DOCUMENT_ROOT/var/www/
      volumes:
        - ../:/var/www:cached
        - ./logs:/var/log/apache2
        - ./apache2/sites:/etc/apache2/sites-available
      ports:
        - "81:80"
        - "433:443"
      depends_on:
        - php-fpm
      networks:
        - netwrk

    mysql:
      build:
        context: ./mysql
      environment:
        - MYSQL_DATABASE=test
        - MYSQL_USER=admin
        - MYSQL_PASSWORD=admin
        - MYSQL_ROOT_PASSWORD=root
      restart: always
      volumes:
        - ./data/mysql:/var/lib/mysql
      ports:
        - "3306:3306"
      networks:
        - netwrk
        
    postgres:
      build: ./postgres
      volumes:
        - ./data/postgres:/var/lib/postgresql/data
      ports:
        - "5432:5432"
      environment:
        - POSTGRES_DB=test
        - POSTGRES_USER=root
        - POSTGRES_PASSWORD=root
      networks:
        - netwrk 
        
    mongo:
      build: ./mongo
      ports:
        - "27017:27017"
      volumes:
        - ./data/mongo:/data/db
      networks:
        - netwrk        
        
    redis:
      build: ./redis
      volumes:
        - ./data/redis:/data
      ports:
        - "6379:6379"
      networks:
        - netwrk       

    elasticsearch: 
      build: ./elasticsearch
      volumes:
        - esdata:/usr/share/elasticsearch/data
      environment:
        - cluster.name=infra-cluster
        - discovery.type=single-node
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
      ports:
        - "9200:9200"
        - "9300:9300"
      networks:
        - netwrk   

    elasticsearch_head:
      build: ./elasticsearch_head
      ports:
        - "9100:9100"
      networks:
        - netwrk

    kibana:
      build: ./kibana
      depends_on:
        - elasticsearch
      ports:
        - "5601:5601"
      networks:
        - netwrk


    dynamodb:
      build: 
        context: ./dynamodb
      environment: 
          - dbPath /data2/
          - sharedDb
      
      volumes:
        - ./data/dynamodb:/data
      ports:
        - "8000:8000"
      networks:
        - netwrk 

#    tests:
#      build:
#        context: ./php/cli
#      volumes:
#        - ../:/var/www:cached
#        - ./test:/var/www/test:cached
#      tty: true
#      stdin_open: true
#      command: 
#        - /var/www/test/run.sh
#      networks:
#        - netwrk

        